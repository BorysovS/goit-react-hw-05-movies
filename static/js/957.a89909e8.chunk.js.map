{"version":3,"file":"static/js/957.a89909e8.chunk.js","mappings":"+PAIaA,EAAY,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,IAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE+BC,EAAAA,EAAAA,IAAYN,GAF3C,OAEcO,EAFd,OAGQH,EAAQG,GAHhB,gDAKMC,QAAQC,IAAI,KAAMC,SALxB,0DADY,uBAAC,WAAD,wBAUZC,EACH,GAAE,CAACX,KAECG,EACD,OAAO,KAGX,IAAQS,EAAiCT,EAAjCS,YAAaC,EAAoBV,EAApBU,MAAOC,EAAaX,EAAbW,SACtBC,EAASZ,EAAKY,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACnDC,EAAYC,KAAKC,MAA0B,GAApBnB,EAAKoB,cAElC,OACI,yBACKpB,IAAgB,4BACjB,gBAAKqB,IAAG,yCAAoCZ,GAAea,IAAI,MAC/D,2BACQ,wBAAKZ,KACL,yCAAiBO,EAAjB,QACJ,uCACQ,uBAAIN,QAEZ,qCACI,uBAAIC,cAMvB,E,QCjBD,EAxBqB,WAAO,IAAD,IAEjBW,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAE3D,OACI,4BACI,SAAC,KAAD,CAAMC,GAAIJ,EAAoBK,QAA9B,sBACA,SAAClC,EAAD,KACA,2BACI,yBACI,SAAC,KAAD,CAAMiC,GAAG,OAAT,qBAEJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGR,SAAC,EAAAE,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIf,C,+LCzBKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAe,mCAAG,sGACVD,EAAAA,EAAAA,IAAA,sCAAyCD,EAAzC,YADU,cACvBG,EADuB,OAEvBC,EAAOD,EAAKC,KAFW,kBAItBA,GAJsB,2CAAH,qDAOflC,EAAW,mCAAG,WAAMN,GAAN,yFACNqC,EAAAA,EAAAA,IAAA,iBAAoBrC,EAApB,oBAAuCoC,IADjC,cACnBG,EADmB,OAEnBC,EAAOD,EAAKC,KAFO,kBAIlBA,GAJkB,2CAAH,sDAOXC,EAAc,mCAAG,WAAMC,GAAN,yFACTL,EAAAA,EAAAA,IAAA,gCACQD,EADR,wCAC+CM,IAFtC,cACtBH,EADsB,OAItBC,EAAOD,EAAKC,KAJU,kBAMrBA,GANqB,2CAAH,sDASdG,EAAY,mCAAG,WAAMC,GAAN,yFACPP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA+CR,IADxC,cACpBG,EADoB,OAEpBC,EAAOD,EAAKC,KAFQ,kBAGnBA,GAHmB,2CAAH,sDAMZK,EAAc,mCAAG,WAAMD,GAAN,yFACTP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA+CR,IADtC,cACtBG,EADsB,OAEtBC,EAAOD,EAAKC,KAFU,kBAGrBA,GAHqB,2CAAH,qD","sources":["components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","services/fetchApiFilm.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { getFilmById } from \"services/fetchApiFilm\";\n\nexport const MovieCard = () => { \n    const { movieId } = useParams();\n    const [film, setFilm] = useState(null)\n\n    useEffect(() => {\n        async function fetchMovieById() { \n            try {\n                const FilmById = await getFilmById(movieId);\n                setFilm(FilmById);\n            } catch (error) {\n              console.log(error.message);  \n            }\n        };\n\n        fetchMovieById();\n    }, [movieId])\n\n    if (!film) { \n        return null\n    }\n    \n    const { poster_path, title, overview } = film;\n    const genres = film.genres.map(genre => genre.name).join(', ');\n    const userScore = Math.round(film.vote_average * 10);\n    \n    return (\n        <div>\n            {film &&         <div>\n            <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"\" />\n            <ul>\n                    <li>{title}</li>\n                    <li>User Score: {userScore}%</li>\n                <li>Overwiews\n                        <p>{overview}</p>\n                </li>\n                <li>Genres:\n                    <p>{genres}</p>\n                </li>\n            </ul>\n            </div>}\n    </div>\n    ) \n}","import { MovieCard } from \"components/MovieCard/MovieCard\";\nimport { useRef } from \"react\";\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\nimport { Suspense } from \"react\";\n\nconst MovieDetails = () => { \n\n    const location = useLocation();\n    const backlinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n    return (\n        <div>\n            <Link to={backlinkLocationRef.current}>Go Back</Link>\n            <MovieCard />\n            <ul>\n                <li>\n                    <Link to=\"cast\">Cast</Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\">Reviews</Link>\n                </li>\n            </ul>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n        </div>\n    )\n}\n\nexport default MovieDetails","import axios from 'axios';\n\nconst API_KEY = '7a32caca7156537126d1246055d1764e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilm = async () => {\n  const resp = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=1`);\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getFilmById = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getSearchMovie = async searchQuery => {\n  const resp = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`\n  );\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getCastMovie = async movieID => {\n  const resp = await axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n  const data = resp.data;\n  return data;\n};\n\nexport const getReviewMovie = async movieID => {\n  const resp = await axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}`);\n  const data = resp.data;\n  return data;\n};\n"],"names":["MovieCard","movieId","useParams","useState","film","setFilm","useEffect","getFilmById","FilmById","console","log","message","fetchMovieById","poster_path","title","overview","genres","map","genre","name","join","userScore","Math","round","vote_average","src","alt","location","useLocation","backlinkLocationRef","useRef","state","from","to","current","Suspense","fallback","API_KEY","axios","getTrendingFilm","resp","data","getSearchMovie","searchQuery","getCastMovie","movieID","getReviewMovie"],"sourceRoot":""}
{"version":3,"file":"static/js/186.c2b1c43f.chunk.js","mappings":"yNAwCA,UAnCgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCAIZ,8GAEkCC,EAAAA,EAAAA,IAAeN,GAFjD,OAEcO,EAFd,OAGQH,EAAWG,EAAYC,SAH/B,gDAKKC,QAAQC,IAAI,KAAMC,SALvB,0DAJY,sBACPX,GADO,mCAaZY,EACH,GAAE,CAACZ,KAKJ,gCACSG,EAAQU,OAAS,IAAK,wEACtBV,EAAQW,KAAI,SAAAC,GAAI,OACb,gBAAIC,IAAKD,EAAKE,GAAd,WACI,qCAAaF,EAAKG,WAClB,uBAAKH,EAAKI,YAHD,MAQ5B,C,+LCpCKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAe,mCAAG,sGACVD,EAAAA,EAAAA,IAAA,sCAAyCD,EAAzC,YADU,cACvBG,EADuB,OAEvBC,EAAOD,EAAKC,KAFW,kBAItBA,GAJsB,2CAAH,qDAOfC,EAAW,mCAAG,WAAMzB,GAAN,yFACNqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,oBAAuCoB,IADjC,cACnBG,EADmB,OAEnBC,EAAOD,EAAKC,KAFO,kBAIlBA,GAJkB,2CAAH,sDAOXE,EAAc,mCAAG,WAAMC,GAAN,yFACTN,EAAAA,EAAAA,IAAA,gCACQD,EADR,wCAC+CO,IAFtC,cACtBJ,EADsB,OAItBC,EAAOD,EAAKC,KAJU,kBAMrBA,GANqB,2CAAH,sDASdI,EAAY,mCAAG,WAAMC,GAAN,yFACPR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA+CT,IADxC,cACpBG,EADoB,OAEpBC,EAAOD,EAAKC,KAFQ,kBAGnBA,GAHmB,2CAAH,sDAMZlB,EAAc,mCAAG,WAAMuB,GAAN,yFACTR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA+CT,IADtC,cACtBG,EADsB,OAEtBC,EAAOD,EAAKC,KAFU,kBAGrBA,GAHqB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/fetchApiFilm.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { getReviewMovie } from \"services/fetchApiFilm\";\n\nconst Reviews = () => { \n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) {\n            return\n        };\n        async function getRiviews() { \n            try {\n                const reviewsInfo = await getReviewMovie(movieId)\n                setReviews(reviewsInfo.results)\n            } catch (error) {\n             console.log(error.message);   \n            }\n        }\n\n        getRiviews()\n    }, [movieId])\n\n    \n\n    return (\n    <>\n            {reviews.length < 1 && <div>We dont have any reviews for this movie...</div>}\n            {reviews.map(item => (\n                <li ket={item.id}>\n                    <h1>Author: {item.author}</h1>\n                    <p>{ item.content}</p>\n              </li>  \n            ))}\n    </>\n    )\n}\n\nexport default Reviews","import axios from 'axios';\n\nconst API_KEY = '7a32caca7156537126d1246055d1764e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilm = async () => {\n  const resp = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=1`);\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getFilmById = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getSearchMovie = async searchQuery => {\n  const resp = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`\n  );\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getCastMovie = async movieID => {\n  const resp = await axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n  const data = resp.data;\n  return data;\n};\n\nexport const getReviewMovie = async movieID => {\n  const resp = await axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}`);\n  const data = resp.data;\n  return data;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getReviewMovie","reviewsInfo","results","console","log","message","getRiviews","length","map","item","ket","id","author","content","API_KEY","axios","getTrendingFilm","resp","data","getFilmById","getSearchMovie","searchQuery","getCastMovie","movieID"],"sourceRoot":""}
{"version":3,"file":"static/js/247.e9a4a013.chunk.js","mappings":"yNAqCA,UAhCa,WACT,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WAAM,wCAIZ,8GAEgCC,EAAAA,EAAAA,IAAaH,GAF7C,OAEcI,EAFd,OAGIL,EAASK,EAAUC,MAHvB,gDAKOC,QAAQC,IAAI,KAAMC,SALzB,0DAJY,sBACPR,GADO,mCAYZS,EACH,GAAE,CAACT,KAGA,wBACKF,EAAMY,KAAI,SAAAL,GAAI,OACX,2BACI,gBAAKM,IAAG,0CAAqCN,EAAKO,cAC1CC,IAAKR,EAAKS,QAClB,uBAAIT,EAAKS,QACT,uCAAeT,EAAKU,eAJfV,EAAKW,GADH,KAS1B,C,+LCjCKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAe,mCAAG,sGACVD,EAAAA,EAAAA,IAAA,sCAAyCD,EAAzC,YADU,cACvBG,EADuB,OAEvBC,EAAOD,EAAKC,KAFW,kBAItBA,GAJsB,2CAAH,qDAOfC,EAAW,mCAAG,WAAMtB,GAAN,yFACNkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBAAuCiB,IADjC,cACnBG,EADmB,OAEnBC,EAAOD,EAAKC,KAFO,kBAIlBA,GAJkB,2CAAH,sDAOXE,EAAc,mCAAG,WAAMC,GAAN,yFACTN,EAAAA,EAAAA,IAAA,gCACQD,EADR,wCAC+CO,IAFtC,cACtBJ,EADsB,OAItBC,EAAOD,EAAKC,KAJU,kBAMrBA,GANqB,2CAAH,sDASdlB,EAAY,mCAAG,WAAMsB,GAAN,yFACPP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA+CR,IADxC,cACpBG,EADoB,OAEpBC,EAAOD,EAAKC,KAFQ,kBAGnBA,GAHmB,2CAAH,sDAMZK,EAAc,mCAAG,WAAMD,GAAN,yFACTP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA+CR,IADtC,cACtBG,EADsB,OAEtBC,EAAOD,EAAKC,KAFU,kBAGrBA,GAHqB,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/fetchApiFilm.js"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { getCastMovie } from \"services/fetchApiFilm\"\n\nconst Cast = () => { \n    const [casts, setCasts] = useState([])\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        if (!movieId) {\n           return \n        }\n        async function getCastInfo() { \n            try {\n                const castsInfo = await getCastMovie(movieId);\n            setCasts(castsInfo.cast);\n            } catch (error) {\n               console.log(error.message); \n            }  \n        }\n        getCastInfo()\n    }, [movieId])\n    \n    return (\n        <ul>\n            {casts.map(cast => (\n                <li key={cast.id}>\n                    <img src={`https://image.tmdb.org/t/p/w200/${cast.profile_path\n                        }`} alt={cast.name} />\n                    <p>{cast.name}</p>\n                    <p>Character: {cast.character}</p>\n             </li>   \n            ))}\n        </ul>)\n}\n\nexport default Cast","import axios from 'axios';\n\nconst API_KEY = '7a32caca7156537126d1246055d1764e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilm = async () => {\n  const resp = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=1`);\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getFilmById = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getSearchMovie = async searchQuery => {\n  const resp = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`\n  );\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getCastMovie = async movieID => {\n  const resp = await axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n  const data = resp.data;\n  return data;\n};\n\nexport const getReviewMovie = async movieID => {\n  const resp = await axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}`);\n  const data = resp.data;\n  return data;\n};\n"],"names":["useState","casts","setCasts","movieId","useParams","useEffect","getCastMovie","castsInfo","cast","console","log","message","getCastInfo","map","src","profile_path","alt","name","character","id","API_KEY","axios","getTrendingFilm","resp","data","getFilmById","getSearchMovie","searchQuery","movieID","getReviewMovie"],"sourceRoot":""}